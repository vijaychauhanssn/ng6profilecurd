{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/services/profile.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<!--The content below is only a placeholder and can be replaced.-->\n\n<ng2-slim-loading-bar color=\"black\"></ng2-slim-loading-bar>\n<nav class=\"nav nav-tabs p-5   \">\n  <div class=\"container-fluid\">\n    <ul class=\"nav nav-tabs\">\n      <li class=\"nav-item\">\n        <a routerLink=\"profile\" class=\"nav-link\" routerLinkActive=\"active\">\n          Add Member\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"home\" class=\"nav-link\" routerLinkActive=\"active\">\n          List Of Members\n        </a>\n      </li> \n    </ul>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\nimport { NavigationCancel,\n  Event,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Profile';\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\n\n//FormModule\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {RouterModule, Routes} from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { HomeComponent } from './components/home/home.component';\n\n//routing\nimport {AppRoutingModule} from './app.routing';\n\n//profile service\nimport {ProfileService} from './services/profile.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    EditComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    SlimLoadingBarModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [ProfileService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { EditComponent } from './components/edit/edit.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\nexport const routes : Routes = [\r\n\t\t{\r\n\t\tpath:'profile',\r\n\t\tcomponent:ProfileComponent\r\n\t\t},\r\n\t\t{\r\n\t\tpath:'edit',\r\n\t\tcomponent:EditComponent\r\n\t\t},\r\n\t\t{\r\n\t\tpath:'home',\r\n\t\tcomponent:HomeComponent\r\n\t\t}\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}","<p>\n  edit works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <h2>Card Image</h2>\n  <p>Image at the top (card-img-top):</p>\n  <div class=\"card\" style=\"width:400px\">\n    <img class=\"card-img-top\" src=\"assets/imgs/img_avatar1.png\" alt=\"Card image\" style=\"width:100%\">\n    <div class=\"card-body\">\n      <h4 class=\"card-title\">John Doe</h4>\n      <p class=\"card-text\">Some example text some example text. John Doe is an architect and engineer</p>\n      <a href=\"#\" class=\"btn btn-primary\">See Profile</a>\n    </div>\n  </div>\n</div>\n\n<table class=\"table table-hover\">\n  <thead>\n  <tr>\n      <td>Ad Unit Name</td>\n      <td>Ad Unit Price</td>\n      <td colspan=\"2\"> fd Actions</td>\n  </tr>\n  </thead>\n\n  <tbody>\n      <tr *ngFor=\"let profile of profiles\">\n          <td>{{ profile.fname }}</td>\n          <td>{{ profile.lname }}</td>\n          <td><a [routerLink]=\"['/edit', profile._id]\" class=\"btn btn-primary\">Edit</a></td>\n          <td><button (click)=\"deleteAdUnit(profile._id)\"  class=\"btn btn-danger\">Delete</button></td>\n      </tr>\n  </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport {ProfileService} from '../../services/profile.service';\nimport {AddProfile} from '../../models/AddProfile';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n profiles:AddProfile[];\n\n  constructor(private profileservice:ProfileService) { }\n\n\n\n  ngOnInit() {\n  \tthis.profileservice.getProfile().subscribe((data:AddProfile[]) =>{\n  \t\tthis.profiles =data;\n  \t});\n  }\n\n}\n","  <div class=\"card\">\n  <div class=\"card-body\">\n  <form [formGroup]=\"profileForm\" class=\"pt-5\" novalidate>\n  \t<div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\">@</span>\n      </div>\n      <input type=\"text\" class=\"form-control\" name=\"fname\" formControlName=\"fname\"  placeholder=\"First Name\"  #fname>\n    </div>\n    <div *ngIf=\"profileForm.controls['fname'].invalid && (profileForm.controls['fname'].dirty || profileForm.controls['fname'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"profileForm.controls['fname'].errors.required\">\n          First Name is required.\n        </div>\n    </div>\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\">@</span>\n      </div>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\" formControlName=\"lname\"  name=\"lname\" #lname>\n    </div>\n    <div *ngIf=\"profileForm.controls['lname'].invalid && (profileForm.controls['lname'].dirty || profileForm.controls['lname'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"profileForm.controls['lname'].errors.required\">\n          Last Name is required.\n        </div>\n    </div>\n    <div class=\"input-group mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\">@</span>\n      </div>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Username\"  name=\"username\" formControlName=\"username\" #username>\n    </div>\n    <div *ngIf=\"profileForm.controls['username'].invalid && (profileForm.controls['username'].dirty || profileForm.controls['username'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"profileForm.controls['username'].errors.required\">\n          User Name is required.\n        </div>\n    </div>\n    <div class=\"form-group\">\n      <input type=\"file\"  class=\"form-control-file border\" name=\"profile_img\" formControlName=\"profile_img\" #profile_img>\n    </div>\n    <div *ngIf=\"profileForm.controls['profile_img'].invalid && (profileForm.controls['profile_img'].dirty || profileForm.controls['profile_img'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"profileForm.controls['profile_img'].errors.required\">\n          Profile Images is required.\n        </div>\n    </div>\n    <button (click)=\"Addprofile(fname, lname, username, profile_img)\" class=\"btn btn-primary\" [disabled]=\"profileForm.pristine || profileForm.invalid\">Submit</button>\n  </form>\n </div>\n </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {ProfileService} from '../../services/profile.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  profileForm:FormGroup;\n\n  constructor(\n    private profileservice:ProfileService,\n    private fb:FormBuilder ) \n     {\n      this.createForm(); \n     }\n\n     createForm(){\n     \tthis.profileForm = this.fb.group({\n     \t\tfname:['', Validators.required],\n     \t\tlname:['', Validators.required],\n     \t\tusername:['', Validators.required],\n     \t\tprofile_img:['', Validators.required]\n     \t});\n     }\n\n     Addprofile(fname, lname, username, profile_img){\n     \tthis.profileservice.Addprofile(fname, lname, username, profile_img);\n     }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {AddProfile} from '../models/AddProfile';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n ApiUrl  = 'http://localhost:4000/profiles';\n\n  constructor(private http:HttpClient) { \n  \tconsole.log('Profile Service is working');\n  }\n\n  Addprofile(fname, lname, username, profile_img){\n  \t\t\tconst obj = {\n  \t\t\t\tfname:fname,\n  \t\t\t\tlname:lname,\n  \t\t\t\tusername:username,\n  \t\t\t\tprofile_img:profile_img\t\t\t\t\n  \t\t\t};\n  \t\t\tthis.http.post(`${this.ApiUrl}/add`, obj)\n  \t\t\t.subscribe(res => console.log('Created'));\n  }\n\n  getProfile(){\n  \treturn this.http.get(`${this.ApiUrl}`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}